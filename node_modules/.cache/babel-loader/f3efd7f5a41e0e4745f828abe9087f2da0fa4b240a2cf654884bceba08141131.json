{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abcir\\\\OneDrive\\\\Bureau\\\\react-todo-list-app\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Header from './header/Header';\nimport Item from './items/Items';\nimport Summary from './summary/Summary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // useStates HOOKS\n  const [tasksData, setTasksData] = useState(() => {\n    var _localStorage$getItem;\n    const storedTasks = (_localStorage$getItem = localStorage.getItem('tasks')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : '[]';\n    return JSON.parse(storedTasks);\n  });\n\n  // Normal Variables\n  const tasksNumber = tasksData.length;\n  const completedTaskNumber = tasksData.filter(currEl => currEl.isCompleted).length;\n  // let sortTasksData = [...tasksData];\n\n  // HANDLE FUNCTIONS\n  function handleSortTasks(e, value) {\n    e.preventDefault();\n    if (value === 'description') {\n      sortTasksData = [...tasksData].sort((a, b) => {\n        const x = a.task.toLowerCase();\n        const y = b.task.toLowerCase();\n        if (x > y) return 1;else if (x < y) return -1;\n      });\n    } else if (value === 'completedTasks') {\n      sortTasksData = [...tasksData].sort((a, b) => a.isCompleted - b.isCompleted);\n    } else if (value === 'inputOrder') sortTasksData = [...tasksData];\n  }\n  function handleClear(e, value) {\n    e.preventDefault();\n    if (value === 'all') setTasksData([]);else if (value === 'completedTasks') setTasksData(tasksData.filter(currEl => !currEl.isCompleted));\n  }\n\n  // useEffects HOOKS\n  // local storage\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasksData));\n  }, [tasksData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      tasksData: tasksData,\n      setTasksData: setTasksData,\n      handleClear: handleClear,\n      handleSortTasks: handleSortTasks,\n      sortTasksData: sortTasksData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Summary, {\n      tasksNumber: tasksNumber,\n      completedTaskNumber: completedTaskNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"0YG47gGVaY36gQb4CseALJE798Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Item","Summary","jsxDEV","_jsxDEV","App","_s","tasksData","setTasksData","_localStorage$getItem","storedTasks","localStorage","getItem","JSON","parse","tasksNumber","length","completedTaskNumber","filter","currEl","isCompleted","handleSortTasks","e","value","preventDefault","sortTasksData","sort","a","b","x","task","toLowerCase","y","handleClear","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abcir/OneDrive/Bureau/react-todo-list-app/src/components/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Header from './header/Header';\nimport Item from './items/Items';\nimport Summary from './summary/Summary';\n\nfunction App() {\n    // useStates HOOKS\n    const [tasksData, setTasksData] = useState(() => {\n        const storedTasks = localStorage.getItem('tasks') ?? '[]';\n        return JSON.parse(storedTasks);\n    });\n\n    // Normal Variables\n    const tasksNumber = tasksData.length;\n    const completedTaskNumber = tasksData.filter(\n        (currEl) => currEl.isCompleted\n    ).length;\n    // let sortTasksData = [...tasksData];\n\n    // HANDLE FUNCTIONS\n    function handleSortTasks(e, value) {\n        e.preventDefault();\n        if (value === 'description') {\n            sortTasksData = [...tasksData].sort((a, b) => {\n                const x = a.task.toLowerCase();\n                const y = b.task.toLowerCase();\n                if (x > y) return 1;\n                else if (x < y) return -1;\n            });\n        } else if (value === 'completedTasks') {\n            sortTasksData = [...tasksData].sort(\n                (a, b) => a.isCompleted - b.isCompleted\n            );\n        } else if (value === 'inputOrder') sortTasksData = [...tasksData];\n    }\n    function handleClear(e, value) {\n        e.preventDefault();\n\n        if (value === 'all') setTasksData([]);\n        else if (value === 'completedTasks')\n            setTasksData(tasksData.filter((currEl) => !currEl.isCompleted));\n    }\n\n    // useEffects HOOKS\n    // local storage\n    useEffect(() => {\n        localStorage.setItem('tasks', JSON.stringify(tasksData));\n    }, [tasksData]);\n    return (\n        <div className=\"container\">\n            <Header />\n            <Item\n                tasksData={tasksData}\n                setTasksData={setTasksData}\n                handleClear={handleClear}\n                handleSortTasks={handleSortTasks}\n                sortTasksData={sortTasksData}\n            />\n            <Summary\n                tasksNumber={tasksNumber}\n                completedTaskNumber={completedTaskNumber}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}